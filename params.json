{
  "name": "React-accordion-with-header",
  "tagline": "Accordion with flex-box based custom header",
  "body": "\r\n# React accordion component with flexbox header \r\n\r\n> \"You've got 5 seconds... and 3 are up.\" - *Steven Seagal*\r\n\r\n### [Check out the demo NOW](https://jforaker.github.io/react-accordion-with-header/demo/)\r\n\r\n<img src=\"https://d17oy1vhnax1f7.cloudfront.net/items/1Z233J1R0J0t0s2f1X1s/Screen%20Recording%202016-09-23%20at%2001.42%20AM.gif\" width=\"600\" />\r\n\r\n#### Install via NPM:\r\n\r\n```\r\nnpm install react-accordion-with-header\r\n```\r\n\r\n#### Import the modules:\r\n\r\n```javascript\r\n\r\nimport {\r\n    AccordionWithHeader,\r\n    AccordionNode,\r\n    AccordionHeader,\r\n    AccordionPanel\r\n} from 'react-accordion-with-header';\r\n\r\n```\r\n\r\nItems can be passed in to `<AccordionHeader />` and `<AccordionPanel />` one of three ways:\r\n\r\n- a component passed into the `template` prop\r\n- a component passed into the body (in between opening and closing tags of parent components)\r\n- as plain html \r\n\r\n*NOTE: We cannot pass in a stateless component as a template at this time because of the way we use refs to calculate height... and according to react: \"`Stateless function components cannot be given refs`\"* \r\n\r\n\r\nThe elements passed in to `<AccordionHeader />` can be **horizontally justified and vertically aligned** via their respective props \r\n:tada: :boom: :beers:  \r\n \r\n- `horizontalAlignment`\r\n- `verticalAlignment`\r\n\r\n\r\n### Pass in a component as a template via `template` prop:\r\n\r\n```javascript\r\n\r\nclass HeaderTpl extends React.Component {\r\n   render() {\r\n     return (\r\n       <header>\r\n         <img src={`http://www.stevensegallery.com/100/10${(Math.floor(Math.random() * 5) + 1)}`}/>\r\n         <img src={`http://www.stevensegallery.com/100/10${(Math.floor(Math.random() * 5) + 1)}`}/>\r\n       </header>\r\n     );\r\n   }\r\n }\r\n \r\n class BodyTpl extends React.Component {\r\n   render() {\r\n     return (\r\n       <article>\r\n         <figcaption>...the blood bank</figcaption>\r\n         <img src={`http://www.stevensegallery.com/200/20${(Math.floor(Math.random() * 5) + 1)}`}/>\r\n       </article>\r\n     );\r\n   }\r\n }\r\n \r\n...\r\n\r\n  render() {\r\n    return (\r\n      <AccordionWithHeader>\r\n        {[1, 2, 3, 4].map((item, i) => {\r\n          return (\r\n            <AccordionNode key={i}>\r\n              <AccordionHeader template={<HeaderTpl />} horizontalAlignment=\"centerSpaceBetween\" />\r\n              <AccordionPanel template={<BodyTpl />} />\r\n            </AccordionNode>\r\n          );\r\n        })}\r\n      </AccordionWithHeader>\r\n    );\r\n  }\r\n\r\n```\r\n\r\n\r\n### Pass in a component as children:\r\n\r\n\r\n```javascript\r\n…\r\n  render() {\r\n    return (\r\n      <AccordionWithHeader>\r\n        {[1, 2, 3, 4].map((item, i) => {\r\n          return (\r\n            <AccordionNode key={i} className=\"foobar-node\">\r\n              <AccordionHeader className=\"foobar-header\"\r\n                               titleColor=\"#607D8B\"\r\n                               horizontalAlignment=\"centerSpaceAround\"\r\n                               verticalAlignment=\"center\">\r\n                <HeaderTpl />\r\n              </AccordionHeader>\r\n              <AccordionPanel>\r\n                <BodyTpl />\r\n              </AccordionPanel>\r\n            </AccordionNode>\r\n          );\r\n        })}\r\n      </AccordionWithHeader>\r\n    );\r\n  }\r\n…\r\n```\r\n\r\n### ...or as plain HTML\r\n \r\n\r\n```javascript\r\n…\r\n  render() {\r\n    return (\r\n      <AccordionWithHeader>\r\n        {[1, 2, 3, 4].map((item, i) => {\r\n          return (\r\n            <AccordionNode key={i}>\r\n              <AccordionHeader>\r\n                <div>\r\n                  <h2>Some title!</h2>\r\n                </div>\r\n              </AccordionHeader>\r\n              <AccordionPanel>\r\n                <section>\r\n                  <header>Some body information etc</header>\r\n                  <article>Interesting things...</article>\r\n                </section>\r\n              </AccordionPanel>\r\n            </AccordionNode>\r\n          );\r\n        })}\r\n      </AccordionWithHeader>\r\n    );\r\n  }\r\n…\r\n```\r\n\r\n\r\n## options / PropTypes\r\n\r\n#### AccordionWithHeader\r\n| Property | Type | Description | Default |\r\n|:---|:---|:---|:---|\r\n| firstOpen | `Boolean` | Determines if the first panel should be expanded by default | `false` |\r\n| multipleOkay | `Boolean` | True allows multiple panels to be expanded at the same time. False allows only one panel to be expanded at any time. | `false` |\r\n| className | `String` | Custom classname applied to root item div | `null` |\r\n\r\n#### AccordionNode\r\n| Property | Type | Description | Default |\r\n|:---|:---|:---|:---|\r\n| className | `String` | Custom classname applied to root item div | `null` |\r\n\r\n\r\n#### AccordionHeader\r\n| Property | Type | Description | Default |\r\n|:---|:---|:---|:---|\r\n| title | `String` | For simple headers, a title will render an `<h1>` and disallow child elements | `null` |\r\n| titleColor | `String` | some valid CSS color or rgb or hex | `black` |\r\n| horizontalAlignment | `String` | One of: 'centerSpaceBetween', 'centerSpaceAround', 'center', 'left', 'right'. Maps to corresponding flex-box CSS property | `centerSpaceAround` |\r\n| verticalAlignment | `String` | One of: 'top', 'center', 'bottom' | `center` |\r\n| className | `String` | Custom classname applied to root div | `accordion-header` |\r\n| style | `Object` | Inline styles applied to root div | `null` |\r\n| template | `Element` | Component to be rendered as a template | `null` |\r\n\r\n#### AccordionPanel\r\n| Property | Type | Description | Default |\r\n|:---|:---|:---|:---|\r\n| template | `Element` | Component to be rendered as a template | `null` |\r\n| speed | `Number` | Speed in milliseconds to apply to CSS transition of open/close effect | `250` |\r\n\r\n\r\n--------------\r\n\r\n### Roadmap\r\n\r\n- add callbacks to open/close methods\r\n- add tests\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}